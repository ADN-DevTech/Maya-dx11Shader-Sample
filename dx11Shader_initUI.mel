//   Code adapted from the CgFX plugin by NVidia               //
// This script is run automatically when the dx11Shader plug-in is loaded.

{
    // Set default definitions for tool buttons in dx11Shader attribute editor.
    //   [0]:    for each of the 2 tool buttons, the assigned tool name (tab separated)
    //   [1..N]: any number of tool definitions consisting of tab-separated
    //             tool name, icon, description, and MEL command string 
    string $s = "AEdx11Shader_toolSymbolButtons";
    if ( !`about -batch` &&
         !`optionVar -exists $s` )
    {
		string $reloadTool = getPluginResource( "dx11Shader", "kReloadTool");
		string $reloadIcon = "refresh.png";
		string $reloadAnnotation = getPluginResource( "dx11Shader", "kReloadAnnotation");
		string $reloadCommand = "dx11Shader -r <node>;";

		string $editTool = getPluginResource( "dx11Shader", "kEditTool");
		string $editIcon = "fileTextureEdit.png";
		string $editAnnotation;
		string $editCommand;

        if ( `about -nt` ) {
			$editAnnotation = getPluginResource( "dx11Shader", "kEditAnnotationWIN");
			$editCommand = "system \"load <file>\";";
        }
        else if ( `about -macOS` ) {
			$editAnnotation = getPluginResource( "dx11Shader", "kEditAnnotationMAC");
			$editCommand = "open -a TextEdit <file>;";
        }
        else {
			$editAnnotation = getPluginResource( "dx11Shader", "kEditAnnotationLNX");
			$editCommand = getPluginResource( "dx11Shader", "kEditCommandLNX");
        }
		
		string $tools = $reloadTool + "\t" + $editTool;
		string $reloadArgs = $reloadTool + "\t" + $reloadIcon + "\t" + $reloadAnnotation + "\t" + $reloadCommand;
		string $editArgs = $editTool + "\t" + $editIcon + "\t" + $editAnnotation + "\t" + $editCommand;
		
		optionVar -sva $s ($tools)
				  -sva $s ($reloadArgs)
				  -sva $s ($editArgs)
				  ;
	}
}
